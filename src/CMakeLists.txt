# add library
add_library(io ../include/io.hpp io.cpp)
add_library(Point ../include/Point.hpp Point.cpp)
add_library(Matrix ../include/Matrix.hpp Matrix.cpp)
add_library(Item ../include/Item.hpp Item.cpp)
add_library(geometry ../include/geometry.hpp geometry.cpp)
add_library(Stock ../include/Stock.hpp Stock.cpp)
add_library(rasterization ../include/rasterization.hpp rasterization.cpp)
add_library(algorithm ../include/algorithm.hpp algorithm.cpp)
add_library(divide_and_conquer_approach ../include/divide_and_conquer_approach.hpp divide_and_conquer_approach.cpp)
add_library(approach0 ../include/approach0.hpp approach0.cpp)

target_link_libraries(Point PRIVATE geometry)
target_link_libraries(Item PRIVATE Point Matrix rasterization)
target_link_libraries(io PRIVATE Item approach0)
target_link_libraries(Stock PRIVATE Matrix)
target_link_libraries(rasterization PRIVATE Matrix geometry Point)
target_link_libraries(algorithm PRIVATE Matrix)
target_link_libraries(divide_and_conquer_approach PRIVATE Point Item geometry)
target_link_libraries(approach0 PRIVATE Point Item geometry)

target_include_directories(io PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(Point PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(Matrix PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(Item PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(geometry PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(Stock PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(rasterization PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(algorithm PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(divide_and_conquer_approach PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(approach0 PUBLIC "${PROJECT_SOURCE_DIR}/include")