include_directories("${PROJECT_SOURCE_DIR}/tests/include")

# test executables
add_executable(read_items_from_input_file_test src/io/read_items_from_input_file_test.cpp)
add_executable(rotate_item_test src/Item/rotate_item_test.cpp)
add_executable(find_centroid_of_item_test src/Item/find_centroid_of_item_test.cpp)
add_executable(calculate_item_area_test src/Item/calculate_item_area_test.cpp)
add_executable(is_on_segment_test src/geometry/is_on_segment_test.cpp)
add_executable(is_point_inside_polygon_test src/geometry/is_point_inside_polygon_test.cpp)
add_executable(translate_to_new_origin_test src/rasterization/translate_to_new_origin_test.cpp)
add_executable(get_raster_matrix_dimension_test src/rasterization/get_raster_matrix_dimension_test.cpp)
add_executable(scan_convert_line_test src/rasterization/scan_convert_line_test.cpp)
add_executable(regionfill_test src/rasterization/regionfill_test.cpp)
add_executable(rasterize_test src/Item/rasterize_test.cpp)
add_executable(isIntersecting_test src/Matrix/isIntersecting_test.cpp)
add_executable(isPlaceable_test src/Stock/isPlaceable_test.cpp)
add_executable(insert_item_test src/Stock/insert_item_test.cpp)
add_executable(split_test src/algorithm/split_test.cpp)
add_executable(orientItems_test src/algorithm/orientItems_test.cpp)
add_executable(rotate90_test src/Matrix/rotate90_test.cpp)
add_executable(rotate_test src/Matrix/rotate_test.cpp)
add_executable(minRecArea_test src/approach0/minRecArea_test.cpp)
add_executable(approach0_rotate_test src/approach0/approach0_rotate_test.cpp)
add_executable(approach0_split_test src/approach0/approach0_split_test.cpp)
add_executable(doesOverlap_test src/approach0/doesOverlap_test.cpp)

# link libraries
target_link_libraries(read_items_from_input_file_test PRIVATE io)
target_link_libraries(rotate_item_test PRIVATE Item geometry)
target_link_libraries(find_centroid_of_item_test PRIVATE Item geometry)
target_link_libraries(calculate_item_area_test PRIVATE Item)
target_link_libraries(is_on_segment_test PRIVATE geometry Point)
target_link_libraries(is_point_inside_polygon_test PRIVATE Point geometry)
target_link_libraries(translate_to_new_origin_test PRIVATE Point rasterization)
target_link_libraries(get_raster_matrix_dimension_test PRIVATE Point rasterization)
target_link_libraries(scan_convert_line_test PRIVATE Point rasterization)
target_link_libraries(regionfill_test PRIVATE Point rasterization)
target_link_libraries(rasterize_test PRIVATE Point rasterization Matrix Item)
target_link_libraries(isIntersecting_test PRIVATE Matrix Point)
target_link_libraries(isPlaceable_test PRIVATE Matrix Stock Point)
target_link_libraries(insert_item_test PRIVATE Matrix Stock Point)
target_link_libraries(split_test PRIVATE algorithm Matrix Point)
target_link_libraries(orientItems_test PRIVATE algorithm Matrix Point)
target_link_libraries(rotate90_test PRIVATE Matrix Point)
target_link_libraries(rotate_test PRIVATE Matrix Point)
target_link_libraries(minRecArea_test PRIVATE approach0)
target_link_libraries(approach0_rotate_test PRIVATE approach0)
target_link_libraries(approach0_split_test PRIVATE approach0)
target_link_libraries(doesOverlap_test PRIVATE approach0)

add_test(read_items_from_input_file_test read_items_from_input_file_test)
add_test(rotate_item_test rotate_item_test)
add_test(find_centroid_of_item_test find_centroid_of_item_test)
add_test(calculate_item_area_test calculate_item_area_test)
add_test(is_on_segment_test is_on_segment_test)
add_test(is_point_inside_polygon_test is_point_inside_polygon_test)
add_test(translate_to_new_origin_test translate_to_new_origin_test)
add_test(get_raster_matrix_dimension_test get_raster_matrix_dimension_test)
add_test(scan_convert_line_test scan_convert_line_test)
add_test(regionfill_test regionfill_test)
add_test(rasterize_test rasterize_test)
add_test(isIntersecting_test isIntersecting_test)
add_test(isPlaceable_test isPlaceable_test)
add_test(insert_item_test insert_item_test)
add_test(split_test split_test)
add_test(rotate90_test rotate90_test)
add_test(orientItems_test orientItems_test)
add_test(rotate_test rotate_test)
add_test(minRecArea_test minRecArea_test)
add_test(approach0_rotate_test approach0_rotate_test)
add_test(approach0_split_test approach0_split_test)
add_test(doesOverlap_test doesOverlap_test)